@model WebApplication1.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = Model.Title;

}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Movies"))
{
    @Html.ValidationSummary(true, "Der er opstået en fejl, tjek nedenunder at du har tilføjet alt den nødvendige information.")
    <div class="form-group">

        @Html.LabelFor(m => m.Name) @*Et label og en tekstboks til Filmens navn*@
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate) @* et label og en tekstboks til udgivelsesdatoen *@
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GenreId) @* Et label og en dropdown list til genre, da der er mange forskellige at vælge i mellem også ser det cool ud*@
        @Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock) @* Antallet af film in stock, med label og tekstboks *@
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>
   
    @Html.HiddenFor(m => m.Id) @* Gemt bruges til at den ikke overskrider andre film hvis det givne id allerede er brugt f.eks. ku Shrek overskride batman hvis der skete en fejl*@
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Gem</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}